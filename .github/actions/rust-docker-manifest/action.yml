name: Rust Docker Manifest
description: Action to create and unify docker image manifests for rust multiarch builds
inputs:
  docker-registry:
    description: The docker registry used to tag the images
    required: false
    default: cr.l5d.io/linkerd
  docker-ghcr-username:
    description: GH username under which to push images
    required: false
  docker-ghcr-pat:
    description: GH PAT for docker-ghcr-username
    required: false
  component:
    description: Image to build
    required: true
runs:
  using: composite
  steps:
  - name: Set environment variables from scripts
    run: |
      echo "TAG=$(CI_FORCE_CLEAN=1 bin/root-tag)" >> $GITHUB_ENV
      echo "DOCKER_BUILDKIT_CACHE=${{ runner.temp }}/.buildx-cache" >> $GITHUB_ENV
      echo "DOCKER_REGISTRY=${{ inputs.docker-registry }}" >> $GITHUB_ENV
  - name: Create multiarch manifest
    run: |
      docker manifest create $DOCKER_REGISTRY/${{ inputs.component }}:$TAG \
          $DOCKER_REGISTRY/${{ inputs.component }}:$TAG-amd64 \
          $DOCKER_REGISTRY/${{ inputs.component }}:$TAG-arm64 \
          $DOCKER_REGISTRY/${{ inputs.component }}:$TAG-arm
  - name: Annotate multiarch manifest
    run: |
      docker manifest annotate $DOCKER_REGISTRY/${{ inputs.component }}:$TAG \
          $DOCKER_REGISTRY/${{ inputs.component }}:${TAG}-amd64 --os=linux --arch=amd64
      docker manifest annotate $DOCKER_REGISTRY/${{ inputs.component }}:$TAG \
          $DOCKER_REGISTRY/${{ inputs.component }}:${TAG}-arm64 --os=linux --arch=arm64
      docker manifest annotate $DOCKER_REGISTRY/${{ inputs.component }}:$TAG \
          $DOCKER_REGISTRY/${{ inputs.component }}:${TAG}-arm --os=linux --arch=arm
  - name: Push multiarch manifest
    run: |
      echo "${{ secrets.DOCKER_GHCR_PAT }}" | docker login ghcr.io -u "${{ secrets.DOCKER_GHCR_USERNAME }}" --password-stdin
      docker manifest push $DOCKER_REGISTRY/${{ inputs.component }}:$TAG
